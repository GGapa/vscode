#include<bits/stdc++.h>
using namespace std;
const int maxn=805,mod=1e9+7;
int G[maxn][maxn],bk[maxn][maxn],f[maxn][maxn],n1,n2,q,pd=0,vis[maxn];
vector<int> e[maxn];
vector<int> g[maxn];
void dfs(int x1,int x2)
{
    int now=x1,len=1,now2=x2,len2=1;
    while(e[now].size()==1)
    {
        now=e[now][0];
        ++len;
    }
    // cout<<g[x2].size()<<'\n';
    while(g[now2].size()==1)
    {
        now2=g[now2][0];
        ++len2;
    } 
    // cout<<x1<<' '<<x2<<' '<<len<<' '<<len2<<' '<<g[x2].size()<<'\n';
    x1=now,x2=now2;
    ++bk[len][len2];
    if(e[x1].size()!=g[x2].size())
    {
        pd=1;
        return;
    }
    for(int i=0;i<e[x1].size();i++)
        dfs(e[x1][i],g[x2][i]);
}
int main()
{
    freopen("b.in","r",stdin);
    freopen("b.out","w",stdout);
    cin>>n1>>n2;
    for(int i=2;i<=n1;i++)
    {
        int fa;
        cin>>fa;
        e[fa].push_back(i);
    }
    for(int i=2;i<=n2;i++)
    {
        int fa;
        cin>>fa; 
        g[fa].push_back(i);
    }
    dfs(1,1);
    f[0][0]=1;
    cin>>q; 
    for(int i=1;i<=q;i++)
    {
        int op,x;
        cin>>op>>x;
        if(op==1)
        {
            vis[x]=1;
            for(int j=1;j<=n1;j++)
                for(int k=max(j,x);k<=n2;k++)
                {
                    if(j==2&&k==47)
                    {
                        cout<<"QWQQQ"<<f[j-1][k-x]<<' '<<f[j][k]<<'\n';
                    }
                    f[j][k]=(f[j][k]+f[j-1][k-x])%mod;
                }
        }  

        else
        {
            vis[x]=0;
            for(int j=1;j<=n1;j++)
                for(int k=max(j,x);k<=n2;k++)
                    G[j][k]=(f[j][k]-f[j-1][k-x]+mod)%mod;
            for(int j=1;j<=n1;j++)
                for(int k=max(j,x);k<=n2;k++)
                    f[j][k]=G[j][k];
            
        }
        memset(G,0,sizeof(G));
        G[0][0]=1; 
        for(int j=1;j<=n1;j++)
            for(int k=j;k<=n2;k++)
            {
                for(int l=1;l<=k;l++)
                {
                    if(vis[l])
                        G[j][k]=(G[j-1][k-l]+G[j][k])%mod;
                }
            }
        
        for(int j=1;j<=n1;j++)
            for(int k=j;k<=n2;k++)//
                if(G[j][k]!=f[j][k])
                {
                    cout<<"FUCK";
                    cout<<j<<' '<<k<<' '<<f[j][k]<<' '<<G[j][k]<<'\n';
                }
        int s=1,res=0;
        // cout<<bk[1][2]<<'\n';
        for(int j=1;j<=n1;j++)
            for(int k=1;k<=n2;k++)
                if(bk[j][k])
                {
                    // cout<<"QWQ"<<j<<' '<<k<<' '<<f[j][k]<<' '<<bk[j][k]<<"\n";
                    for(int l=1;l<=bk[j][k];l++)
                        s=1ll*s*G[j][k]%mod,res+=k;
                    // s=1ll*s*bk[j][k]%mod*f[j][k]%mod,s%=mod;    
                }
        cout<<s<<"\n";

    }
    return 0;
}